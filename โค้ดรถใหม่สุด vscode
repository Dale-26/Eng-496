#include <WiFi.h>
#include <WebServer.h>
#include <WebSocketsServer.h>

const char* ssid = "ESP32_Car";
const char* password = "12345678";

WebServer server(80);
WebSocketsServer webSocket = WebSocketsServer(81);

String mode = "MANUAL";           // Current mode
String lastCommand = "None";      // Last command sent to Arduino

// HTML + JS
const char htmlPage[] PROGMEM = R"rawliteral(
<!DOCTYPE html>
<html>
<head>
    <title>ESP32 Car Control</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body { font-family: Arial; margin:0; padding:0; text-align:center; user-select:none; -webkit-user-select:none; -webkit-tap-highlight-color: transparent; }
        #status { margin: 20px; }
        /* ฝั่งซ้าย */
        #left-controls {
            position: fixed; bottom: 50px; left: 20px;
            display: flex; flex-direction: column; gap: 15px;
        }
        /* ฝั่งขวา */
        #right-controls {
            position: fixed; bottom: 50px; right: 20px;
            display: flex; gap: 15px;
        }
        button {
            width: 80px; height: 80px; font-size: 18px;
            border-radius: 50%; border: none; cursor: pointer; opacity: 0.8;
            user-select:none;
        }
        button:active { opacity: 1; }
        #forward { background-color: lightgreen; }
        #backward { background-color: lightcoral; }
        #turnLeft, #turnRight { background-color: orange; }
    </style>
</head>
<body>

<h2>ESP32 Car Control</h2>
<div id="status">
    <p>Current Mode: <span id="currentMode">MANUAL</span></p>
    <p>Last Command Sent: <span id="lastCmd">None</span></p>
    <button onclick="setMode('MANUAL')">Manual</button>
    <button onclick="setMode('AUTO')">Auto</button>
</div>

<!-- ฝั่งซ้าย -->
<div id="left-controls">
    <button id="forward">หน้า</button>
    <button id="backward">ถอย</button>
</div>

<!-- ฝั่งขวา -->
<div id="right-controls">
    <button id="turnLeft">ซ้าย</button>
    <button id="turnRight">ขวา</button>
</div>

<script>
var ws = new WebSocket('ws://' + location.hostname + ':81/');
ws.onopen = function(){ console.log('Connected to ESP32'); };
ws.onmessage = function(evt){
    var data = evt.data;
    if(data.startsWith("MODE:")) document.getElementById('currentMode').innerText = data.substring(5);
    else document.getElementById('lastCmd').innerText = data;
};

function sendCmd(cmd){
    ws.send(cmd);
    document.getElementById('lastCmd').innerText = cmd;
}
function setMode(m){ ws.send("MODE:" + m); }

// ฟังก์ชันผูกปุ่มกดค้าง
function bindButton(id, cmd){
    const btn = document.getElementById(id);
    btn.addEventListener('mousedown', ()=> sendCmd(cmd));
    btn.addEventListener('touchstart', ()=> sendCmd(cmd));
    btn.addEventListener('mouseup', ()=> sendCmd('S'));
    btn.addEventListener('mouseleave', ()=> sendCmd('S'));
    btn.addEventListener('touchend', ()=> sendCmd('S'));
    btn.addEventListener('touchcancel', ()=> sendCmd('S'));
    btn.addEventListener('contextmenu', e => e.preventDefault()); // ป้องกันเลือก/เมนูมือถือ
}

// ผูกปุ่มทั้งหมด
bindButton('forward','F');
bindButton('backward','B');
bindButton('turnLeft','L');
bindButton('turnRight','R');

</script>
</body>
</html>
)rawliteral";



// ---------------- Handlers ----------------
void handleRoot() {
  server.send(200, "text/html", htmlPage);
}

void webSocketEvent(uint8_t num, WStype_t type, uint8_t * payload, size_t length) {
  if(type == WStype_TEXT){
    String msg = String((char*)payload);
    msg.trim();
    Serial.println("Received: " + msg);

    if (msg.startsWith("MODE:")) {
      String newMode = msg.substring(5);
      mode = newMode;
      // แจ้ง client update mode
      webSocket.broadcastTXT("MODE:" + mode);
      // ส่ง Arduino ให้รู้ด้วย
      Serial1.println(msg);
    } else {
      // ส่งคำสั่ง Manual หรือ Auto
      Serial1.println(msg);
      lastCommand = msg;
      // แจ้ง client update last command
      webSocket.broadcastTXT(lastCommand);
    }
  }
}

// ---------------- Setup ----------------
void setup() {
  Serial.begin(115200);
  Serial1.begin(9600, SERIAL_8N1, 16, 17); // RX=16, TX=17 to Arduino

  WiFi.softAP(ssid, password);
  Serial.println("ESP32 AP started");
  Serial.println(WiFi.softAPIP());

  server.on("/", handleRoot);
  server.begin();

  webSocket.begin();
  webSocket.onEvent(webSocketEvent);
}

// ---------------- Loop ----------------
void loop() {
  server.handleClient();
  webSocket.loop();
}
